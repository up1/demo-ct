{
	"info": {
		"_postman_id": "06dd2643-d805-4612-ae93-bae1ea234c06",
		"name": "demo01",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "1453931",
		"_collection_link": "https://red-firefly-245852.postman.co/workspace/swpark2024~e6ea5d00-c5a4-4429-b0b1-4fc9017367df/collection/1453931-06dd2643-d805-4612-ae93-bae1ea234c06?action=share&source=collection_link&creator=1453931"
	},
	"item": [
		{
			"name": "request01",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Schema is valid\", function () {",
							"  var schema = {",
							"    type: \"object\",",
							"    properties: {",
							"      id: { type: \"number\" },",
							"      name: { type: \"string\" },",
							"      username: { type: \"string\" },",
							"      email: { type: \"string\", format: \"email\" },",
							"      address: {",
							"        type: \"object\",",
							"        properties: {",
							"          street: { type: \"string\" },",
							"          suite: { type: \"string\" },",
							"          city: { type: \"string\" },",
							"          zipcode: { type: \"string\" },",
							"          geo: {",
							"            type: \"object\",",
							"            properties: {",
							"              lat: { type: \"string\" },",
							"              lng: { type: \"string\" }",
							"            },",
							"            required: [\"lat\", \"lng\"]",
							"          }",
							"        },",
							"        required: [\"street\", \"suite\", \"city\", \"zipcode\", \"geo\"]",
							"      },",
							"      phone: { type: \"string\" },",
							"      website: { type: \"string\" },",
							"      company: {",
							"        type: \"object\",",
							"        properties: {",
							"          name: { type: \"string\" },",
							"          catchPhrase: { type: \"string\" },",
							"          bs: { type: \"string\" }",
							"        },",
							"        required: [\"name\", \"catchPhrase\", \"bs\"]",
							"      }",
							"    },",
							"    required: [\"id\", \"name\", \"username\", \"email\", \"address\", \"phone\", \"website\", \"company\"]",
							"  };",
							"",
							"  var response = pm.response.json();",
							"  pm.expect(tv4.validate(response, schema)).to.be.true;",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://jsonplaceholder.typicode.com/users/1",
					"protocol": "https",
					"host": [
						"jsonplaceholder",
						"typicode",
						"com"
					],
					"path": [
						"users",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "request01 Copy",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Schema is valid\", function () {",
							"  var schema = {",
							"    type: \"object\",",
							"    properties: {",
							"      id: { type: \"number\" },",
							"      name: { type: \"string\" },",
							"      username: { type: \"string\" },",
							"      email: { type: \"string\", format: \"email\" },",
							"      address: {",
							"        type: \"object\",",
							"        properties: {",
							"          street: { type: \"string\" },",
							"          suite: { type: \"string\" },",
							"          city: { type: \"string\" },",
							"          zipcode: { type: \"string\" },",
							"          geo: {",
							"            type: \"object\",",
							"            properties: {",
							"              lat: { type: \"string\" },",
							"              lng: { type: \"string\" }",
							"            },",
							"            required: [\"lat\", \"lng\"]",
							"          }",
							"        },",
							"        required: [\"street\", \"suite\", \"city\", \"zipcode\", \"geo\"]",
							"      },",
							"      phone: { type: \"string\" },",
							"      website: { type: \"string\" },",
							"      company: {",
							"        type: \"object\",",
							"        properties: {",
							"          name: { type: \"string\" },",
							"          catchPhrase: { type: \"string\" },",
							"          bs: { type: \"string\" }",
							"        },",
							"        required: [\"name\", \"catchPhrase\", \"bs\"]",
							"      }",
							"    },",
							"    required: [\"id\", \"name\", \"username\", \"email\", \"address\", \"phone\", \"website\", \"company\"]",
							"  };",
							"",
							"  var response = pm.response.json();",
							"  pm.expect(tv4.validate(response, schema)).to.be.true;",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://jsonplaceholder.typicode.com/users/1",
					"protocol": "https",
					"host": [
						"jsonplaceholder",
						"typicode",
						"com"
					],
					"path": [
						"users",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "request01 Copy 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Schema is valid\", function () {",
							"  var schema = {",
							"    type: \"object\",",
							"    properties: {",
							"      id: { type: \"number\" },",
							"      name: { type: \"string\" },",
							"      username: { type: \"string\" },",
							"      email: { type: \"string\", format: \"email\" },",
							"      address: {",
							"        type: \"object\",",
							"        properties: {",
							"          street: { type: \"string\" },",
							"          suite: { type: \"string\" },",
							"          city: { type: \"string\" },",
							"          zipcode: { type: \"string\" },",
							"          geo: {",
							"            type: \"object\",",
							"            properties: {",
							"              lat: { type: \"string\" },",
							"              lng: { type: \"string\" }",
							"            },",
							"            required: [\"lat\", \"lng\"]",
							"          }",
							"        },",
							"        required: [\"street\", \"suite\", \"city\", \"zipcode\", \"geo\"]",
							"      },",
							"      phone: { type: \"string\" },",
							"      website: { type: \"string\" },",
							"      company: {",
							"        type: \"object\",",
							"        properties: {",
							"          name: { type: \"string\" },",
							"          catchPhrase: { type: \"string\" },",
							"          bs: { type: \"string\" }",
							"        },",
							"        required: [\"name\", \"catchPhrase\", \"bs\"]",
							"      }",
							"    },",
							"    required: [\"id\", \"name\", \"username\", \"email\", \"address\", \"phone\", \"website\", \"company\"]",
							"  };",
							"",
							"  var response = pm.response.json();",
							"  pm.expect(tv4.validate(response, schema)).to.be.true;",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://jsonplaceholder.typicode.com/users/1",
					"protocol": "https",
					"host": [
						"jsonplaceholder",
						"typicode",
						"com"
					],
					"path": [
						"users",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "request01 Copy 3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Schema is valid\", function () {",
							"  var schema = {",
							"    type: \"object\",",
							"    properties: {",
							"      id: { type: \"number\" },",
							"      name: { type: \"string\" },",
							"      username: { type: \"string\" },",
							"      email: { type: \"string\", format: \"email\" },",
							"      address: {",
							"        type: \"object\",",
							"        properties: {",
							"          street: { type: \"string\" },",
							"          suite: { type: \"string\" },",
							"          city: { type: \"string\" },",
							"          zipcode: { type: \"string\" },",
							"          geo: {",
							"            type: \"object\",",
							"            properties: {",
							"              lat: { type: \"string\" },",
							"              lng: { type: \"string\" }",
							"            },",
							"            required: [\"lat\", \"lng\"]",
							"          }",
							"        },",
							"        required: [\"street\", \"suite\", \"city\", \"zipcode\", \"geo\"]",
							"      },",
							"      phone: { type: \"string\" },",
							"      website: { type: \"string\" },",
							"      company: {",
							"        type: \"object\",",
							"        properties: {",
							"          name: { type: \"string\" },",
							"          catchPhrase: { type: \"string\" },",
							"          bs: { type: \"string\" }",
							"        },",
							"        required: [\"name\", \"catchPhrase\", \"bs\"]",
							"      }",
							"    },",
							"    required: [\"id\", \"name\", \"username\", \"email\", \"address\", \"phone\", \"website\", \"company\"]",
							"  };",
							"",
							"  var response = pm.response.json();",
							"  pm.expect(tv4.validate(response, schema)).to.be.true;",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://jsonplaceholder.typicode.com/users/1",
					"protocol": "https",
					"host": [
						"jsonplaceholder",
						"typicode",
						"com"
					],
					"path": [
						"users",
						"1"
					]
				}
			},
			"response": []
		}
	]
}